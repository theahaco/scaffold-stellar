name: CD - Scaffold # Continuous Deployment

permissions:
  # TODO: once `releases: write` is supported, use it instead.
  contents: write

on:
  push:
    tags:
      - "stellar-scaffold-cli-v[0-9]+.[0-9]+.[0-9]+*"
  pull_request:
    paths:
      - crates/stellar-scaffold-cli/CHANGELOG.md
env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10
  CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

defaults:
  run:
    shell: bash

jobs:
  upload-assets:
    name: ${{ matrix.target }}
    if: github.repository_owner == 'theahaco'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # - target: aarch64-pc-windows-msvc
          #   os: windows-2022
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04
          - target: x86_64-apple-darwin
            os: macos-14
          # - target: x86_64-pc-windows-msvc
          #   os: windows-2022
          # - target: x86_64-unknown-linux-musl
          #   os: ubuntu-22.04
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-22.04-arm
          # - target: aarch64-unknown-linux-musl
          #   os: ubuntu-22.04
          - target: aarch64-apple-darwin
            os: macos-14
          # - target: x86_64-unknown-freebsd
          #   os: ubuntu-22.04
          - target: universal-apple-darwin
            os: macos-14
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.target }}-cargo-${{ hashFiles('**/CHANGELOG.md') }}
      - if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get -y install libudev-dev libdbus-1-dev
      - uses: taiki-e/install-action@cross
        if: contains(matrix.target, '-musl')
      - name: Use static openssl
        run: echo "OPENSSL_STATIC=1" >> $GITHUB_ENV
        if: startsWith(matrix.os, 'ubuntu')
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: stellar-scaffold
          target: ${{ matrix.target }}
          tar: all
          zip: windows
          archive: $tag-$target
          token: ${{ secrets.GITHUB_TOKEN }}
          dry-run: ${{ github.event_name == 'pull_request' }}
        env:
          OPENSSL_STATIC: ${{ env.OPENSSL_STATIC }}
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
