name: RPC Tests

permissions:
  contents: read

on:
  workflow_dispatch:
  push:
    branches: [main, release/**]
  pull_request:
    paths:
      - '!website/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: test RPC
    runs-on: ubuntu-latest
    env:
      STELLAR_RPC_URL: http://localhost:8000/soroban/rpc
      STELLAR_NETWORK_PASSPHRASE: "Standalone Network ; February 2017"
      STELLAR_ACCOUNT: default
      STELLAR_CONTRACT_ID: core
      PKG_CONFIG_PATH: /usr/lib/pkgconfig
    services:
      rpc:
        image: stellar/quickstart:testing
        ports:
          - 8000:8000
        env:
          ENABLE_LOGS: true
          NETWORK: local
          ENABLE_SOROBAN_RPC: true
        options: >-
          --health-cmd "curl --no-progress-meter --fail-with-body -X POST \"http://localhost:8000/soroban/rpc\" -H 'Content-Type: application/json' -d '{\"jsonrpc\":\"2.0\",\"id\":8675309,\"method\":\"getNetwork\"}' && curl --no-progress-meter \"http://localhost:8000/friendbot\" | grep '\"invalid_field\": \"addr\"'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 50
    steps:
      - uses: actions/checkout@v3
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libdbus-1-dev pkg-config libudev-dev
      - name: Restore cache
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            crates/stellar-scaffold-test/fixtures/soroban-init-boilerplate/target/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: rustup update
      - run: rustup target add wasm32v1-none
      - uses: taiki-e/install-action@just
      - uses: taiki-e/install-action@nextest
      - uses: cargo-bins/cargo-binstall@main
      - run: just setup
      - run: just create
      - run: just test-integration
      - name: Always Save Cache
        id: cache-save
        if: always() && steps.cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            crates/stellar-scaffold-test/fixtures/soroban-init-boilerplate/target/
            target/
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
